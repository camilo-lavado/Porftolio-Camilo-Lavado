---
---
<style>
  .background {
    position: absolute;
    inset: 0;
    z-index: -10;
    background-color: #000;
    overflow: hidden;
  }

  .line {
    position: absolute;
    top: -100%;
    width: 1px;
    height: 200%;
    background-color: rgba(255, 255, 255, 0.05);
    animation: fall linear infinite;
  }

  .dot {
    position: absolute;
    width: 4px;
    height: 4px;
    border-radius: 50%;
    opacity: 0.6;
    animation: fall-dot linear infinite;
    transition: transform 0.3s ease, opacity 0.3s ease;
  }

  .dot:hover {
    transform: scale(1.5);
    opacity: 1;
  }

  @keyframes fall {
    0% {
      transform: translateY(0%);
    }
    100% {
      transform: translateY(100%);
    }
  }

  @keyframes fall-dot {
    0% {
      transform: translateY(0);
      opacity: 1;
    }
    100% {
      transform: translateY(100vh);
      opacity: 0;
    }
  }
</style>

<div class="background">
  {Array.from({ length: 12 }).map((_, i) => {
    const left = `${i * 8}vw`;
    const lineDuration = 10 + (i % 5);

    // Genera 1 o 2 puntos alineados con cada lÃ­nea
    const numDots = Math.random() > 0.5 ? 2 : 1;
    const dots = Array.from({ length: numDots }).map((_, j) => {
      const isWhite = Math.random() > 0.5;
      const color = isWhite ? '#ffffff' : '#3b82f6';
      const size = Math.random() * 2 + 3;
      const duration = 3 + Math.random() * 5;
      const delay = Math.random() * 5;

      return (
        <div
          class="dot"
          style={`left: ${left};
                  width: ${size}px;
                  height: ${size}px;
                  background-color: ${color};
                  animation-duration: ${duration}s;
                  animation-delay: ${delay}s;`}
        />
      );
    });

    return (
      <>
        <div
          class="line"
          style={`left: ${left}; animation-duration: ${lineDuration}s;`}
        />
        {dots}
      </>
    );
  })}
</div>
